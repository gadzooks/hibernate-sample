<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.gadzooks</groupId>
    <artifactId>learn-hibernate</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <slf4jVersion>1.6.1</slf4jVersion>
    </properties>

    <dependencies>
       <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>5.1.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.5.3.Final</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.30</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.25</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.hibernate.validator</groupId>-->
<!--            <artifactId>hibernate-validator</artifactId>-->
<!--            <version>7.0.1.Final</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; JSR 380 standard supports variable interpolation, allowing expressions inside the violation messages.-->
<!--              We add javax.el that implements this functionality&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.glassfish</groupId>-->
<!--            <artifactId>javax.el</artifactId>-->
<!--            <version>3.0.1-b12</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; Jakarta Bean Validation defines integration points with CDI (Contexts and Dependency Injection for Jakarta EE).-->
<!--         If your application runs in an environment which does not provide this integration out of the box, you may use-->
<!--         the Hibernate Validator CDI portable extension by adding the following Maven dependency to your POM:&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.hibernate.validator</groupId>-->
<!--            <artifactId>hibernate-validator-cdi</artifactId>-->
<!--            <version>7.0.1.Final</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>